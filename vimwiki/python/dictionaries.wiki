# N.B. dict's have unique entries, casting them as such is equivalent to defining a "set"

Age = {"John" : 16,"Jack" : 24,"Jill" : 30}
for name, age in Age.items():
    print("Phone number of %s is %d" % (name, number))

names =Age.keys()
vals  =Age.values()
# you can now add entries, and these will automatically be updated

# view objects:
phonebook.keys()
phonebook.values()
# ^ automatically updated as entries change

phonebook.pop("John")
does the same thing as
del phonebook["John"]

# It may also be useful to load data structures from strings with
json.loads(json_string)
# if the parentheses are part of the whole string, like, e.g.:
# "{ "key":val,"key2":val2...}"
