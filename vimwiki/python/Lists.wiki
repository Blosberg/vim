LISTS

= Slicing =
list indexing list[start:stop:stride]
# a in reverse order
a[::-1]


= Count occurances within a list =
>>> my_list = [1, 2, 3, 0, 2, 3]
>>> count = my_list.count(3)
>>> print(count)
2

= memory =
L0=[1,2,3]
L1=L0
# ^ Just creates another pointer to the same position in memory. If you want another list (i.e. copy by value), then:
L2=L0.copy()
# or:
L3=L0[:]
# or
L4=list(L0)

= List comprehensions =
[ expression for item in list if conditional ]

e.g. list the even numbers between 5 and 9 in a string:

>>> [ "Here is charnum "+str(i)+" in a string " for i in range(5,9) if i%2==0 ]
['Here is charnum 6 in a string ', 'Here is charnum 8 in a string ']

= multiple lists: =

>>> [ "Here is charnum "+str(i)+" and "+ str(x) +" in a string " for i in range(5,9) for x in range(2,6) if i%2==0 and x%2==1 ]
['Here is charnum 6 and 3 in a string ', 'Here is charnum 6 and 5 in a string ', 'Here is charnum 8 and 3 in a string ', 'Here is charnum 8 and 5 in a string ']

>>> testlist
[['apple', 'banana', 'cherry'], ['date', 'eggplant'], ['fig']]
>>> [ x for x in testlist] # x is a list of words
[['apple', 'banana', 'cherry'], ['date', 'eggplant'], ['fig']]
>>> [ y for x in testlist for y in x] # y is a word each time
['apple', 'banana', 'cherry', 'date', 'eggplant', 'fig']
>>> [ y for x in testlist for y in x for IRRELEVANT_VARIABLE in range(3)] # just triples each entry
['apple', 'apple', 'apple', 'banana', 'banana', 'banana', 'cherry', 'cherry', 'cherry', 'date', 'date', 'date', 'eggplant', 'eggplant', 'eggplant', 'fig', 'fig', 'fig']
>>> [ z for x in testlist for y in x for z in y] # z is the letters in each word
['a', 'p', 'p', 'l', 'e', 'b', 'a', 'n', 'a', 'n', 'a', 'c', 'h', 'e', 'r', 'r', 'y', 'd', 'a', 't', 'e', 'e', 'g', 'g', 'p', 'l', 'a', 'n', 't', 'f', 'i', 'g']



