  # if you do pca <- prcomp ( A )

A should be a table where
  * - Every ROW represents a distinct observation
  * - Every COLUMN is a dimension characterizing the position of that point.

  # Then pca$rotation will be an orthonormal rotation matrix.
  # and  pca$x        will be the rotated data, with the same dimensionality as A

# to plot the components
#
plot(  pca$x[,1],
         pca$x[,2], col=rgb(0,0,0,0.15 ),
         xlab="PC1",
         ylab="PC2",
         main="PC-rotated promoter methylome profiles [+/- 2kb]."
       )

  # You can then do the following:

  # A_copy <- pca`$`rotation %*% t(pca$x)
  # ^ gives you back the original value "A"

  # to get the matrix that performs the forward operation (i.e. rotates from original space _into_ PCA space):
  # rot_in2_pca_mat = solve ( pca$rotation )
  # ("solve" in R means "invert", because R is terrible.)

  # pcax_copy <- t( rot_in2_pca_mat %*% t( ROI_dat_lin ) )
  # ^ This will be equal to pca$x (within machine tolerance)

The problem is almost always transposing at the right times
