Brendans vimwiki:

== Disclaimer ==

This is a personal repo where I occasionally make notes to avoid searching
online repeatedly. The notes are in my own messy shorthand, and while you're
free to use them, I make no promises as to their legibility and assume no
liability with respect to their accuracy. If you'd like to combine wiki's get
in touch and we can see if our note-taking styles are compatible.
Use at your own risk.

= Notes:  =

= shell + packaging =

    * [[shell/conda|conda]] -- Conda: manage environments, recipes.

    * [[shell/shell_variables|shell_variables]] -- string subsets, length, basename, dirname of filepaths
    * [[shell/shell_scripting|shell_scripting]] -- parse command line args for shell scripts;
    * [[shell/Linux_info|Linux_info]]     -- lsb_release, free, distro info,
    * [[shell/command_line|active command_line]] -- move back and forth, delete text while typing, clear current output
    * [[shell/Profile|Profile]] -- change look/colorscheme/etc. of terminal
        - [[shell/prompt_values|prompt_values]] --PS1, PS2, etc. the characters that appear before the "$" prompt on terminal
    * [[shell/awk_sed_grep_cut|awk_sed_grep_cut]] -- one-liners
    * [[shell/batch_rename|batch_rename]] -- change the names of multiple files/folders
    * [[shell/Parameter_expansion|Parameter_expansion]]: variable referencing, indirect referencing, etc.
    * [[shell/tmux|tmux]]

= Atom =
 command palette: cmd+Shift+P
= vim =

Mon 25 Jan 2021 10:56:52 CET (date stamp inserted with :r !date )
    * [[vim/movements|movements]]
    * [[vim/vimdiff|vimdiff]]
    * [[vim/tabs|tabs]]    -- open and navigate tabs in vim
    * [[vim/File_management |File_management]] -- open files from tabs, gf <C-W>f, get file extensions, paths, etc. write selection to file

    == Batch operations ==
    * [[vim/macros|macros]]
    * [[vim/g_command|g_command]] -- global commands like g/pattern/command
    * [[vim/Mappings|Mappings]]
    * [[vim/search_and_replace|search_and_replace]]
    * [[vim/Incrementing|Incrementing]] -- numbers +/-

    == Patterns ==
    * [[vim/syntax|syntax]]  -- file-type dependent syntax recognition
    * [[vim/spellcheck|spellcheck]]
    * [[vim/Expression_Register|Expression_Register]]
    * [[vim/Autocomplete|Autocomplete]]

    == plugins ==
    * [[vim/minpac|minpac]] -- plugin to manage plugins: packadd update

    * [[vim/fugitive|fugitive]]
    * [[vim/gitgutter|gitgutter]]

= Programming =
    * https://www.codecademy.com/
    = c++ =
         * [[c++/vectors|vectors]] -- cheat sheet for vectors in c++
         * [[c++/classes|classes]] -- define/derive classes, syntax
         * [[c++/switch|switch]] -- switch statement

    = R =

         * [[R_language/Env_files|Env_files]] save and load image files of RData for the working space.

         * [[R_language/logicals|logicals]] ifelse, any, all
         * [[R_language/eval|eval]]       -- evaluate strings as expressions
         * [[R_language/sorting|sorting]] -- sort, rank, order, etc.
         * [[R_language/dataframes|dataframes]]   -- dplyer, filter, select, mutate, boxplot, hist, table unique values (how many of each)
         * [[R_language/apply|apply]] -- sweep-like operations on extended datasets lapply, sapply, mapply, etc.
         * [[R_language/prcomp|prcomp]]   -- the usual principle-components script (pca/PCA)
         * [[R_language/plotting|plotting]] -- smoothScatter, repular plot, options
         * [[R_language/split|split]] -- split arrays into lists of arrays
	 * [[R_language/GRanges|GRanges]] -- setdiff, GRL_ overlaps, etc.
	 * [[R_language/biostrings|biostrings]] --biostrings, read in and inspect reference genomes.

    = python =
    Ternary op:
      Y = trueValue if cond else falseValue
      Z = (falseValue,trueValue)[cond]

         == tutorials ==
         - https://docs.python.org/
         - www.learnpython.org

         == System interface: venv, pip, FILE I/O ==
         id(var)  returns the location of a data

         - [[python/venv|venv]] --Virtual environment management
         - [[python/pip|pip]] pip package management
         - [[python/FILE_access|FILE_I/O]] -- reading/writing, csv files, with ... as, os.walk, isdir, isfile, os.list etc.
         - [[python/jupyter|jupyter_notebooks]] -- starting/stopping sessions

         == Packages: numpy, pandas, matplotlib, pdb ==
         - [[python/import_exec|import_exec]]: sourcing, importing, etc.
         - [[python/numpy|numpy]]
         - [[python/random|random]]
         - [[python/pandas|pandas]]
         - [[python/matplotlib|matplotlib]] : plot examples: beeswarm, 3d, histogram, Dendrogram (hierarchical clustering), heatmap

         == structs and functions: Classes, functions  datetime ==
         - [[python/functions|functions]]
         - [[python/Classes|Classes]]
         - [[python/datetime|datetime]]

         == Containers: strings, dicts, lists, sets  ==
         - [[python/strings|strings]]
         - [[python/dictionaries|dictionaries]]
         - [[python/Generators|Generators]]
         - [[python/Lists|Lists]] -- basic syntax and implementation
         - [[python/Sets|Sets]] --intersection, difference, union, overlap
         - [[python/batch_operations|batch_operations]] --map,filter,reduce; operations

         == Debugging: pdb, Exceptions, testing ==
         - [[python/pdb|pdb]]:           -- debugger for python

         - [[python/Exceptions|Exceptions]]

    = Snakemake =
         * [[python/Snakemake_inputLists|SM_inputLists]] -- trace over inputs with wildcards that reference some dict.
    = CSS =
    * - [[css/External|]]
    * - internal
    * - inline

= Data Science, Machine/Statistical Learning, regression, stats, =

    * [[ML/data_sets|data_sets]]

   == Regression, classification ==
    * [[python/OLS_regression|OLS_regression]]

   == Classification ==

    * [[python/Logistic_regression|Logistic_Regression]]
    * [[python/Random_Forest|Random_Forest]]
    * [[ML/SGD_classifier|SGD_classifier]]--
    * [[ML/Linear_SVM|Linear_SVM]] -- define a plane separating two types

   == (Neural) Networks ==
    * [[python/Networks|Networks]]

    * [[ML/Max_pooling|Max_pooling]]
    * [[ML/Convolution|Convolution]]
    * [[ML/Flattening|Flattening]]
    * [[ML/Dropout|Dropout]]
   == tensorflow ==
     [To be filled in...]
   == pytorch ==
    https://pytorch.org/docs/stable/nn.html#torch.nn
     * [[ML/pytorch/Tensors|Tensors]]
     * [[ML/pytorch/ModelDeclaration|Model_declaration]]
     * [[ML/pytorch/Loss|Loss]]

= Math and stats =
    * [[math_stats/Precision_recall|precision_recall]]
    * [[math_stats/PCA_SVG|PCA_SVG]]
    * [[math_stats/Anova|Anova]] --analysis of variance, two-way anova, F-test, F-ratio,Tukey test
    * [[math_stats/FDR|FDR]]


= OSX =
    * [[OSX/shortcut_keys|shortcut_keys]]
    * [[OSX/booting|booting]]

= Regex =
        -- regular expressions --
    * [[Regex/Tutorials|Tutorials]]
    * [[Regex/Wildcards|Wildcards_and_quantifiers]] --wildcards, quantifiers, + * . ?
    * [[Regex/Regex_Quantifiers|Regex_Quantifiers]] --
    * [[Regex/Greedy_vs_lazy|Greedy_vs_lazy]]
    * [[Regex/Lookarounds|Lookarounds]]

= Resource_management =
    * [[Resource_management/Mounting|Mounting]] -- Hardware: how to mount/unmount a drive in Unix
        * [[Resource_management/Veracrypt|Veracrypt]]
    * [[Resource_management/fileformats|File_formats]] -- Tradeoffs between file formatting standards (OS-compatibility, Size limits, etc.)
    * [[Resource_management/guix|guix]] -- how to manage environments+manifests, etc.
    * [[Resource_management/valgrind|valgrind]] -- profile your c++ code
    * [[Resource_management/dmesg|dmesg]] -- Get info about a task submitted on a local machine (without SGE queueing), find out why it died, etc.
    * [[Resource_management/du|du]]    -- disk usage
    * [[Resource_management/Filesharing|Filesharing]]
    = Cluster =
        - [[Resource_management/SGE_submission|SGE_submission]]  -- example script
        - [[Resource_management/check_cluster_status|check_cluster_status]]

= privacy =
    * [[privacy/encfs|encfs]] -- set up the vault
    * [[privacy/othertips|othertips]] -- spooky shit
    * [[privacy/PGP|PGP]]       -- how to use pgp

= git =
    * [[git/setup|setup]] -- settings, config, etc.
    * [[git/inspect|inspect]] -- review and tidy up repo. blame, diff, log, bisect, clean etc.

    * [[git/preset_changes|preset_changes]] -- create and apply diff files, patches, cherry pick commits
    * [[git/committing|committing]]
        * [[git/commit_tree|commit_tree]] --navigate tree of commits: check history, branching, merging, rebase, reset
    * [[git/sharing|sharing]] --pushing and pulling with remotes; sending patches, diffs, etc.
    * [[git/stash|stash]]
    * [[git/tags|tags]]

    * [[git/Tutorials|Tutorials]]
    * [[git/fugitive|fugitive]]
= Bioinformatics =

    * [[BioInfo/bedtools|bedtools]] -- map and manipulate bedfiles onto each other
    * http://rosalind.info/problems/locations/
    * [[BioInfo/Datasets|Datasets]]
    * [[BioInfo/Experiment_types|Experiment_types]]
    * [[BioInfo/pyranges|pyranges]]
